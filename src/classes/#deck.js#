import { timeout } from '../tools/async.js';

export class Deck {
    constructor() {
	this.context = {};
    }
    set(data) {
	Object.assign(this.context, data);
	return this;
    }
    get(defaults={}) {
	this.context = {...defaults, ...this.context};
	return this.context;
    }    
    async insert(...newCards) {
	const {x, y, cards, delay} = this.get({cards: [], delay: 50});
	cards.push(...newCards);
	const p_tweens = cards.map((card, i) => );
	await Promise.all(p_tweens);	
    }
    release(oldCards) {
	const {cards} = this.get();
	const newCards = cards.filter(card => !oldCards.includes(card));
	this.set({cards:newCards});
	return this;
    }
}
